import java.util.*;

class Solution {
    // 출차내역 없을 수 있음
    // 누적으로 시간 계산
    // 초과 시간에 대해서는 올림을 적용
    // 차량 번호가 작은 자동차부터 
    public int[] solution(int[] fees, String[] records) {
        List<Integer> answer = new ArrayList<>();
        
        int defaultTime = fees[0];
        int defaultFee = fees[1];
        int unitTime = fees[2];
        int unitFee = fees[3];
        
        HashMap<String, ArrayList<String>> lst = new HashMap<>();
        for(int i = 0; i < records.length; i++) {
            String[] s = records[i].split(" ");
            String time = s[0];
            String car = s[1];
            String flag = s[2];
            lst.putIfAbsent(car, new ArrayList<>());
            // print(lst);
            // lst.get(car).add("string");
            ArrayList<String> elem = new ArrayList<>(lst.get(car));
            elem.add(time);
            lst.put(car, elem);
        }
        
        // key 정렬
        List<String> keyList = new ArrayList<>(lst.keySet());
        Collections.sort(keyList);
        
        // arrayList - 차량번호, 시간
        // sort를 해서 answer로
        for(String key: keyList) {
            ArrayList<String> elem = lst.get(key);
            if(elem.size() % 2 != 0) {
                elem.add("23:59");
            }
             
            int time = 0;
            for(int i = 0; i < elem.size(); i += 2) {
                time += calculateTime(elem.get(i), elem.get(i+1));
            }
            
            answer.add(calcualteFee(time, defaultTime, defaultFee, unitTime, unitFee));
            
        }
        
        return answer.stream().mapToInt(Integer::intValue).toArray();
    }
    
    private void print(HashMap<String, ArrayList<String>> map) {
        System.out.println("---------");
        for(Map.Entry<String, ArrayList<String>> e: map.entrySet()) {
            System.out.println(e.getKey() + " " + e.getValue());
        }
    }
    
    private int calcualteFee(int time, int defaultTime, int defaultFee, int unitTime, int unitFee){
        if(time - defaultTime < 0) return defaultFee;
        // System.out.println(time - defaultTime + " " +  Math.ceil((double)(time - defaultTime)/unitTime) );
        return defaultFee +( (int) Math.ceil((double)(time - defaultTime)/unitTime) )* unitFee;
    } 
    
    private int calculateTime(String t1, String t2) {
        String[] s1 = t1.split(":");
        String[] s2 = t2.split(":");
        
        int h1 = Integer.parseInt(s1[0]);
        int m1 = Integer.parseInt(s1[1]);
        int h2 = Integer.parseInt(s2[0]);
        int m2 = Integer.parseInt(s2[1]);
        
        int h = h2 - h1;
        int m = m2 - m1;
        if(m < 0) {
            m += 60;
            h -= 1;
        }
        
        return h * 60 + m;
    }
}
