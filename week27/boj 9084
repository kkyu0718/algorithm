import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());

        int turn = Integer.parseInt(st.nextToken());

        for(int t = 0; t < turn; t++) {
            st = new StringTokenizer(br.readLine());
            int n = Integer.parseInt(st.nextToken());
            int[] arr = new int[n];

            st = new StringTokenizer(br.readLine());
            for(int i = 0; i < n; i++) {
                arr[i] = Integer.parseInt(st.nextToken());
            }

            st = new StringTokenizer(br.readLine());
            int k = Integer.parseInt(st.nextToken());
            solution(arr, n, k);
        }
    }

    public static void solution(int[] arr, int n, int k) {
        int[] dp = new int[k+1];
        // dp[i] : i원을 만들기 위한 경우의 수
        // 동전 k원을 사용할때 dp[i+k] = dp[i] + dp[i+k]
        dp[0] = 1;

        for(int i = 0; i < n; i++) {
            for (int j = 0; j < k; j++) {
                if (j + arr[i] > k) break;
                dp[j + arr[i]] += dp[j];
            }
        }

        System.out.println(dp[k]);
    }
}
