import java.io.*;

import java.util.*;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    static StringTokenizer st;


    public static void main(String[] args) throws IOException {
        // 5:45
        st = new StringTokenizer(br.readLine());
        int N = Integer.parseInt(st.nextToken());
        int M = Integer.parseInt(st.nextToken());

        int[] sum = new int[N+1];
        int[][] dp = new int[N+1][M+1];

        for(int i = 0; i < N; i++) {
            st = new StringTokenizer(br.readLine());
            sum[i+1] = sum[i] + Integer.parseInt(st.nextToken());
        }

        for(int i = 0; i <= N; i++) {
            for(int j = 1; j <= M; j++) {
                dp[i][j] = -32768 * 101;
            }
        }

        dp[1][1] = sum[1];

        for(int i = 2; i <= N; i++) {
            for(int j = 1; j <= M; j++) {
                dp[i][j] = dp[i-1][j];

                if(j == 1) {
                    dp[i][j] = Math.max(dp[i][j], sum[i]);
                }
                for(int k = 0; k <= i-2; k++) {
                    dp[i][j] = Math.max(dp[i][j], dp[k][j-1] + sum[i] - sum[k+1]);
                }
            }
        }

        // knapsack 과의 차이 비교해보기
//        print(dp);
        bw.write(dp[N][M]+"");
        bw.flush();
    }

    static void print(int[][] dp) {
        for(int i = 0; i < dp.length; i++) {
            for(int j = 0; j < dp[0].length; j++) {
                System.out.print(String.format("%3d", dp[i][j]));
            }
            System.out.println();
        }
    }

}
