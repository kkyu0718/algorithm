#include <vector>
#include <string>
#include <iostream>

using namespace std;
int N, M;
string arr[100][100];
int visit[100][100];
int dx[] = {1, -1, 0, 0};
int dy[] = {0, 0, 1, -1};
int count = 0;

void dfs(int y, int x, string color){
  // cout << "dfs color "<< color << endl;
  visit[y][x]= 1;
  count += 1;
  // cout << y << " " << x << endl;
  for(int i = 0; i < 4; i++) {
    int ny = y + dy[i];
    int nx = x + dx[i];

    if(ny < 0 || nx < 0 || ny >= M || nx >=N){
      continue;
    }
    if(arr[ny][nx] == color && visit[ny][nx] == 0) {
      dfs(ny,nx, color);
    }
  }
}

int main() {
  cin >> N >> M;
  int white = 0;
  int blue = 0;
  
  for(int i = 0; i < M; i++){
    string s;
    cin >> s;
    for(int j = 0; j < N; j++){
      arr[i][j] = s[j];
    }
  }
  
  for(int i = 0; i < M; i++){
    for(int j = 0; j < N; j++){
      if(visit[i][j] == 0){
        count = 0;
        string color = arr[i][j];
        dfs(i, j, arr[i][j]);
        if(color == "W") white += count * count;
        else blue += count * count;
      }
    }
  }
  cout << white << " " << blue<< endl;
  return 0;
}
