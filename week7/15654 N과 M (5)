#include<iostream>
#include<vector>
#include<algorithm>

using namespace std;
int N, M, temp;
vector<int> result;
vector<int> v;
int visit[8];

void dfs(int count, vector<int> v){
  if(count == M) {
    for(int j = 0; j < result.size(); j++){
      cout << result[j] << " ";
    }
    cout << '\n';
    return;
  }
  
  for(int i = 0; i < N; i++){
    if(visit[i] == 1) continue;
    visit[i] = 1;
    result.push_back(v[i]);
    dfs(count+1,v);
    visit[i] = 0;
    result.pop_back();
  }
}

int main(void)
{
  cin >> N >> M;
  for (int i = 0; i < N; i++) {
    cin >> temp;
    v.push_back(temp);
  }
  sort(v.begin(), v.end());
  
  dfs(0, v);  
}
