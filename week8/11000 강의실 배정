#include <iostream>
#include <algorithm>
#include <utility>
#include <vector>
#include <queue>
using namespace std;

bool cmp(pair<int, int> a, pair <int, int> b) {
  if(a.second == b.second) {
    return a.first < b.first;
  } else{
    return a.second < b.second;
  }
}

int main(){
  int n, start, end;
  vector<pair<int, int>> v;
  cin >> n;
  for(int i =0 ; i < n; i++) {
    cin >> start >> end;
    v.push_back(make_pair(start, end));
  }
  sort(v.begin(), v.end());

  deque<int> ends;
  ends.push_back(v[0].second);
  int count = 1;
  for(int i = 1; i < v.size(); i++) {
    if(v[i].first < ends.front()){
      count += 1;
      ends.push_back(v[i].second);
    } else{
      ends.push_back(v[i].second);
      ends.pop_front();
      // sort(ends.begin(), ends.end());
    }
  }
  // for(int i = 0; i < ends.size(); i++) {
  //   cout << ends[i] << endl;
  // }
  cout << count;
  return 0;
}
