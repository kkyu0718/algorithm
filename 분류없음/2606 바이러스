import sys

# initialization
vertex = int(sys.stdin.readline())
edge = int(sys.stdin.readline())
adjlist = [[0]*(vertex+1) for i in range(vertex+1)]

for _ in range(edge):
    x, y = map(int, sys.stdin.readline().split())
    adjlist[x][y] = 1
    adjlist[y][x] = 1

# print(adjlist)

visited = [False] * (vertex+1)

# bfs
from collections import deque
def bfs(visited, start):
    queue = deque([start])
    visited[start] = True
    while (queue) :
        target = queue.pop()
        for i in range(1, vertex+1):
            if adjlist[target][i] == 1 and visited[i] == False:
                visited[i] = True
                queue.append(i)


bfs(visited, 1)
print(len(list(filter(lambda x: x == True, visited)))-1)
