import sys
import itertools
from collections import deque, Counter
sys.setrecursionlimit(100000)
M, N = map(int, sys.stdin.readline().split())
graph = []
for i in range(N):
    graph.append(list(map(int,sys.stdin.readline().split())))

queue = deque()
for i in range(N):
    for j in range(M):
        if graph[i][j] == 1:
            queue.append((i,j))

# graph 원소 개수 count
count = Counter([x for line in graph for x in line])
zeros = count[0]
ones = count[1]
visitnum = 0
# result = 0

# 상 하 좌 우
dx = [0,0,-1,1]
dy = [1,-1,0,0]

def bfs(queue, graph):
    global visitnum, result
    newqueue = deque()

    while queue:
        # result +=1
        # print(queue)
        (x,y) = queue.popleft()
        # print(x,y)
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            if nx <0 or nx >= N or ny < 0 or ny >= M :
                continue
            if graph[nx][ny] == -1 or graph[nx][ny] != 0:
                continue
            graph[nx][ny] = graph[x][y] + 1
            visitnum += 1
            queue.append((nx,ny))
        if visitnum == zeros:
            print(max([x for line in graph for x in line]) - 1)
            return
    print(-1)



bfs(queue, graph)

